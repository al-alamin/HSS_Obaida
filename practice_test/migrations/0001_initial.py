# -*- coding: utf-8 -*-
# Generated by Django 1.10.3 on 2016-12-13 05:39
from __future__ import unicode_literals

import ckeditor_uploader.fields
from django.conf import settings
import django.contrib.postgres.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='MCQ',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', ckeditor_uploader.fields.RichTextUploadingField(verbose_name='Question')),
                ('choice_a', models.CharField(blank=True, max_length=200, null=True)),
                ('choice_b', models.CharField(blank=True, max_length=200, null=True)),
                ('choice_c', models.CharField(blank=True, max_length=200, null=True)),
                ('choice_d', models.CharField(blank=True, max_length=200, null=True)),
                ('choice_e', models.CharField(blank=True, max_length=200, null=True)),
                ('choice_f', models.CharField(blank=True, max_length=200, null=True)),
                ('answer', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=3), size=None)),
                ('answer_explanation', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True, verbose_name='Answer Explanation: ')),
                ('difficulty', models.PositiveSmallIntegerField(default=1, validators=[django.core.validators.MaxValueValidator(5), django.core.validators.MinValueValidator(1)])),
            ],
        ),
        migrations.CreateModel(
            name='ModelTest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('exam_type', models.CharField(choices=[('gre', 'GRE'), ('toefl', 'TOEFL'), ('gmat', 'GMAT'), ('sat', 'SAT')], help_text='Select Exam Type: ', max_length=30)),
                ('fee', models.PositiveSmallIntegerField(default=0)),
                ('difficulty', models.PositiveSmallIntegerField(default=1, validators=[django.core.validators.MaxValueValidator(5), django.core.validators.MinValueValidator(1)])),
            ],
        ),
        migrations.CreateModel(
            name='ModelTestResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('submission_time', models.DateTimeField(blank=True, null=True)),
                ('marks', models.IntegerField(default=0)),
                ('subject_wise_marks', django.contrib.postgres.fields.ArrayField(base_field=models.PositiveSmallIntegerField(), blank=True, null=True, size=None)),
                ('model_test', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='practice_test.ModelTest')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SubjectTest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('subject_type', models.CharField(choices=[('quantitative', 'Quantitative'), ('verbal', 'Verbal')], help_text='Select Subject Type: ', max_length=30)),
                ('fee', models.PositiveSmallIntegerField(default=0)),
                ('duration', models.PositiveSmallIntegerField(default=30)),
                ('per_mcq_marks', models.PositiveSmallIntegerField(default=1)),
                ('difficulty', models.PositiveSmallIntegerField(default=1, validators=[django.core.validators.MaxValueValidator(5), django.core.validators.MinValueValidator(1)])),
                ('model_test', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='practice_test.ModelTest')),
            ],
        ),
        migrations.CreateModel(
            name='SubjestTestResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('submission_time', models.DateTimeField(blank=True, null=True)),
                ('marks', models.IntegerField(default=0)),
                ('myanswers', django.contrib.postgres.fields.ArrayField(base_field=models.PositiveSmallIntegerField(), blank=True, null=True, size=None)),
                ('subject_test', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='practice_test.SubjectTest')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='mcq',
            name='subject_test',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='practice_test.SubjectTest'),
        ),
    ]
